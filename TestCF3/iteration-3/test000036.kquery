array A-data-stat[144] : w32 -> w8 = symbolic
array arg00[11] : w32 -> w8 = symbolic
array arg01[3] : w32 -> w8 = symbolic
array arg02[3] : w32 -> w8 = symbolic
array const_arr1[768] : w32 -> w
array model_version[4] : w32 -> w8 = symbolic
array n_args[4] : w32 -> w8 = symbolic
array n_args_1[4] : w32 -> w8 = symbolic
array stdin-stat[144] : w32 -> w8 = symbolic
array stdout-stat[144] : w32 -> w8 = symbolic
(query [(Ult N0:(ReadLSB w32 0 n_args)
              2)
         (Slt 0 N0)
         (Ult N1:(ReadLSB w32 0 n_args_1)
              3)
         (Slt 0 N1)
         (Eq false (Eq 1 N1))
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 A-data-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 A-data-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdin-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdin-stat)
              65536)
         (Eq false
             (Eq 0
                 (And w64 (ReadLSB w64 8 stdout-stat)
                          2147483647)))
         (Ult (ReadLSB w64 56 stdout-stat)
              65536)
         (Eq 1
             (ReadLSB w32 0 model_version))
         (Eq 45 (Read w8 0 arg00))
         (Eq false
             (Eq 45 N2:(Read w8 1 arg00)))
         (Eq false (Eq 0 N2))
         (Eq 100
             (Extract w8 0 (SExt w32 N2)))
         (Eq false
             (Eq 0 N3:(Read w8 2 arg00)))
         (Eq 0
             (And w32 (ZExt w32 (ReadLSB w16 N4:(Extract w32 0 (Add w64 256
                                                                        (Mul w64 2
                                                                                 (SExt w64 N5:(SExt w32 N3))))) const_arr1))
                      8192))
         (Eq false (Eq 43 N3))
         (Eq false (Eq 45 N3))
         (Eq false
             (Sle (ZExt w32 (Extract w8 0 (Add w32 4294967248 N5)))
                  9))
         (Sle 65 N5)
         (Eq false
             (Sle 10
                  (ZExt w32 (Extract w8 0 (Add w32 4294967209 (Or w32 N5 32))))))
         (Eq false
             (Sle (ZExt w32 (Extract w8 0 (Add w32 4294967248
                                                   N6:(SExt w32 (Read w8 3 arg00)))))
                  9))
         (Sle 65 N6)
         (Eq false
             (Sle 10
                  (ZExt w32 (Extract w8 0 (Add w32 4294967209 (Or w32 N6 32))))))
         (Eq false
             (Sle (ZExt w32 (Extract w8 0 (Add w32 4294967248
                                                   N7:(SExt w32 (Read w8 4 arg00)))))
                  9))
         (Sle 65 N7)
         (Sle 10
              (ZExt w32 (Extract w8 0 (Add w32 4294967209 (Or w32 N7 32)))))
         (Eq 45 (Read w8 0 arg01))
         (Eq false
             (Eq 45 N8:(Read w8 1 arg01)))
         (Eq false (Eq 0 N8))
         (Eq 112
             (Extract w8 0 (SExt w32 N8)))
         (Eq 0
             (And w32 (ZExt w32 (ReadLSB w16 N9:(Extract w32 0 (Add w64 256
                                                                        (Mul w64 2
                                                                                 (SExt w64 N10:(SExt w32 N11:(Read w8 0 arg02)))))) const_arr1))
                      8192))
         (Eq false (Eq 43 N11))
         (Eq false (Eq 45 N11))
         (Sle (ZExt w32 N12:(Extract w8 0 (Add w32 4294967248 N10)))
              9)
         (Sle (ZExt w32 N13:(Extract w8 0 (Add w32 4294967248
                                                   (SExt w32 (Read w8 1 arg02)))))
              9)
         (Slt 0
              N14:(Extract w32 0 (Add w64 (Mul w64 10 (ZExt w64 N12))
                                          (ZExt w64 N13))))
         (Eq false
             (Eq 120
                 (Mul w64 24 (SExt w64 N14))))]
        false)
