n_args0  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
n_args_11  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
A-data-stat2  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
stdin-stat3  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
model_version4  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg005  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg016  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
arg027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr18  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr29  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr310  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr411  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr512  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr613  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr714  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr815  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr916  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1017  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1118  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1219  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1320  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1421  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1522  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1623  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1724  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1825  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr1926  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2027  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2128  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2229  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2330  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2431  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2532  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2633  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2734  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2835  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr2936  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3037  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3138  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3239  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3340  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3441  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3542  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3643  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3744  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3845  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr3946  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4047  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4148  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4249  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4350  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4451  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4552  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4653  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4754  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4855  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr4956  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5057  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5158  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5259  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5360  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5461  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5562  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5663  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5764  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5865  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr5966  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6067  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6168  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6269  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6370  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6471  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6572  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6673  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6774  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6875  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr6976  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7077  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7178  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7279  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7380  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7481  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7582  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7683  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7784  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7885  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr7986  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8187  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8288  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8389  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8490  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8691  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8792  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8893  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr8994  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9095  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9196  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9297  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9398  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr9499  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr95100  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr96101  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
const_arr97102  : ARRAY BITVECTOR(32) OF BITVECTOR(8);
%----------------------------------------------------
ASSERT( BVGT(0x00000002,(n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args0[0x00000003] @ (n_args0[0x00000002] @ (n_args0[0x00000001] @ n_args0[0x00000000]
)
)
),0x00000000)
 );
ASSERT( BVGT(0x00000003,(n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
))
 );
ASSERT( SBVGT((n_args_11[0x00000003] @ (n_args_11[0x00000002] @ (n_args_11[0x00000001] @ n_args_11[0x00000000]
)
)
),0x00000000)
 );
ASSERT( ( NOT( ((((0x01 = n_args_11[0x00000000]
) AND (0x00 = n_args_11[0x00000001]
)
) AND (0x00 = n_args_11[0x00000002]
)
) AND (0x00 = n_args_11[0x00000003]
)
))) );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (A-data-stat2[0x0000000B] @ (A-data-stat2[0x0000000A] @ (A-data-stat2[0x00000009] @ A-data-stat2[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(A-data-stat2[0x0000003F] @ (A-data-stat2[0x0000003E] @ (A-data-stat2[0x0000003D] @ (A-data-stat2[0x0000003C] @ (A-data-stat2[0x0000003B] @ (A-data-stat2[0x0000003A] @ (A-data-stat2[0x00000039] @ A-data-stat2[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ( NOT( (0b0000000000000000000000000000000 = (stdin-stat3[0x0000000B] @ (stdin-stat3[0x0000000A] @ (stdin-stat3[0x00000009] @ stdin-stat3[0x00000008]
)
)
)[30:0]
))) );
ASSERT( BVGT(0x0000000000010000,(stdin-stat3[0x0000003F] @ (stdin-stat3[0x0000003E] @ (stdin-stat3[0x0000003D] @ (stdin-stat3[0x0000003C] @ (stdin-stat3[0x0000003B] @ (stdin-stat3[0x0000003A] @ (stdin-stat3[0x00000039] @ stdin-stat3[0x00000038]
)
)
)
)
)
)
))
 );
ASSERT( ((((0x01 = model_version4[0x00000000]
) AND (0x00 = model_version4[0x00000001]
)
) AND (0x00 = model_version4[0x00000002]
)
) AND (0x00 = model_version4[0x00000003]
)
) );
ASSERT( (0x2D = arg027[0x00000000]
) );
ASSERT( (0x00 = arg027[0x00000001]
) );
ASSERT( (0x0A = arg005[0x00000000]
) );
ASSERT( ( NOT( (0x00 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x38 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x39 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x3A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x3B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x3C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x3D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x3E = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x3F = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x30 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x31 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x32 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x33 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x34 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x35 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x36 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x37 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x28 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x29 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2E = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x2F = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x20 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x21 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x22 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x23 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x24 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x25 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x26 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x27 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x08 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x09 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x0A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x0B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x0C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x0D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x07 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x78 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x79 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x7A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x7B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x7C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x7D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x7E = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x70 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x71 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x72 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x73 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x74 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x75 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x76 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x77 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x68 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x69 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x6A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x6B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x6C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x6D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x6E = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x6F = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x60 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x61 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x62 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x63 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x64 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x65 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x66 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x67 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x58 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x59 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x5A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x5B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x5C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x5D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x5E = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x5F = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x50 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x51 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x52 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x53 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x54 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x55 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x56 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x57 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x48 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x49 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x4A = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x4B = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x4C = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x4D = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x4E = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x4F = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x41 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x42 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x43 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x44 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x45 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x46 = arg005[0x00000001]
))) );
ASSERT( ( NOT( (0x47 = arg005[0x00000001]
))) );
ASSERT( ( NOT( SBVGT(0x00000080,(0x000000 @ arg005[0x00000001]
))
)) );
ASSERT( (0x2F = arg005[0x00000002]
) );
ASSERT( (0x36 = arg005[0x00000003]
) );
ASSERT( (0x2F = arg005[0x00000004]
) );
ASSERT( (0x36 = arg005[0x00000005]
) );
ASSERT( (0x36 = arg005[0x00000006]
) );
ASSERT( (0x36 = arg005[0x00000007]
) );
ASSERT( (0x2F = arg005[0x00000008]
) );
ASSERT( (0x36 = arg005[0x00000009]
) );
ASSERT( (0x2F = arg016[0x00000000]
) );
ASSERT( (0x00 = arg016[0x00000001]
) );
%----------------------------------------------------
QUERY( FALSE  );
